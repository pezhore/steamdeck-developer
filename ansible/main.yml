---
- name: Recover from SteamOS update
  hosts: localhost
  remote_user: deck
  become: yes

  vars:
    filecleanup: false
    codeVsxInstall: false

  tasks:
  - name: Check SteamOS Read Only Status
    ansible.builtin.command:
      cmd: steamos-readonly status
    ignore_errors: yes
    register: readonly_cmd

  - name: Set Fact for SteamOS Ready Only
    ansible.builtin.set_fact:
      steamosro: "{{ readonly_cmd.stdout }}"

  - name: Recover after Update
    block:
    - name: Clean up/remove files before package installation
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      with_items:
        - /etc/containers/registries.d/default.yaml
        - /opt/cni/bin/bandwidth
        - /opt/cni/bin/bridge
        - /opt/cni/bin/dhcp
        - /opt/cni/bin/firewall
        - /opt/cni/bin/host-device
        - /opt/cni/bin/host-local
        - /opt/cni/bin/ipvlan
        - /opt/cni/bin/loopback
        - /opt/cni/bin/macvlan
        - /opt/cni/bin/portmap
        - /opt/cni/bin/ptp
        - /opt/cni/bin/sbr
        - /opt/cni/bin/static
        - /opt/cni/bin/tuning
        - /opt/cni/bin/vlan
        - /opt/cni/bin/vrf
        - /etc/vpnc/vpnc-script
      when: filecleanup

    - name: Change to RW file system
      ansible.builtin.command:
        cmd: steamos-readonly disable

    - name: Pacman Keyring Initialization
      ansible.builtin.command:
        cmd: pacman-key --init

    - name: Populate pacman's keyring with the default archlinux gpg keys
      ansible.builtin.command:
        cmd: pacman-key --populate archlinux
    when: steamosro == 'enabled'

  - name: Ensure packages are installed
    community.general.pacman:
      name:
        - terraform
        - packer
        - vault
        - podman
        - tmux
        - code
        - code-marketplace
        - fuse-overlayfs
        - slirp4netns
        - base-devel
        - globalprotect-openconnect
        - fortune-mod
        - expect
        - stow
        - libfido2
        - opensc
        - ccid
        - pcsc-tools
        - xclip
      state: present

  - name: Enable and start pcscd
    ansible.builtin.systemd:
      name: pcscd
      enabled: yes
      state: started

  - name: Set VSCode Settings
    ansible.builtin.copy:
      dest: "{{lookup('env','HOME')}}/.config/Code\ -\ OSS/User/settings.json"
      content: |
        {
          "security.workspace.trust.untrustedFiles": "open",
          "terminal.integrated.fontFamily": "hack",
          "terminal.integrated.defaultProfile.linux": "zsh",
          "terminal.integrated.profiles.linux": {
            "zsh": {
                "path": "/usr/bin/zsh",
            }
          } 
        }


  - name: Install Code Extensions
    ansible.builtin.command:
      cmd: "code --install-extension {{ item }}"
    with_items:
      - 4ops.packer
      - coolbear.systemd-unit-file
      - GitHub.copilot
      - mechatroner.rainbow-csv
      - mohsen1.prettify-json
      - shd101wyy.markdown-preview-enhanced
      - streetsidesoftware.code-spell-checker
      - tsandall.opa
      - golang.go
      - hashicorp.terraform
    become_user: deck
    when: codeVsxInstall

  - name: Rootless Podman and Config
    block:
      - name: Ensure subuid and subgid files are populated with the deck user
        ansible.builtin.copy:
          dest: "{{ item }}"
          content: |
            deck:100000:65536
        with_items:
        - /etc/subuid
        - /etc/subgid
